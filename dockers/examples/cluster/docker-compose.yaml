version: '3.9'

services:
  teable:
    image: ghcr.io/teableio/teable:latest
    deploy:
      replicas: 2
    restart: always
    expose:
      - '3000'
    volumes:
      - teable-data:/app/.assets:rw
    environment:
      - TZ=${TIMEZONE}
      - NODE_OPTIONS=--max-old-space-size=1024
      - PUBLIC_ORIGIN=http://127.0.0.1
      - PRISMA_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@teable-db:5432/${POSTGRES_DB}
      - BACKEND_CACHE_PROVIDER=redis
      - BACKEND_CACHE_REDIS_URI=redis://:${POSTGRES_PASSWORD}@teable-cache:6379/0
    networks:
      - teable-cluster
    depends_on:
      teable-db-migrate:
        condition: service_completed_successfully
      teable-cache:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      start_period: 5s
      interval: 5s
      timeout: 3s
      retries: 3

  teable-db:
    image: postgres:15.4
    restart: always
    expose:
      - '5432'
    volumes:
      - teable-db:/var/lib/postgresql/data:rw
    environment:
      - TZ=${TIMEZONE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - teable-cluster
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  teable-cache:
    image: redis:7.2.4
    restart: always
    expose:
      - '6379'
    volumes:
      - teable-cache:/data:rw
    networks:
      - teable-cluster
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3

  teable-db-migrate:
    image: ghcr.io/teableio/teable-db-migrate:latest
    environment:
      - TZ=${TIMEZONE}
      - PRISMA_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@teable-db:5432/${POSTGRES_DB}
    networks:
      - teable-cluster
    depends_on:
      teable-db:
        condition: service_healthy

  teable-gateway:
    image: openresty/openresty:1.25.3.1-2-bookworm-fat
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './gateway/conf.d:/etc/nginx/conf.d'
    networks:
      - teable-cluster
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/healthcheck']
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      teable:
        condition: service_started

networks:
  teable-cluster:
    name: teable-cluster-network
    driver: bridge

volumes:
  teable-data: {}
  teable-db: {}
  teable-cache: {}
